#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Spellcard 3"]
#Text["Life Sign [Prospering Life]"]
#include "script/default_system/Default_ShotConst.txt"
let objBoss;
let frame = 0;


@Event{
  alternative (GetEventType())
    case (EV_REQUEST_LIFE) {
      SetScriptResult(500);
    }
    case (EV_REQUEST_TIMER) {
      SetScriptResult(60);
    }
    case (EV_REQUEST_SPELL_SCORE) {
      SetScriptResult(1000000);
    }

}


@Initialize{
  objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
  ObjEnemy_Regist(objBoss);
  let imgExRumia = GetCurrentScriptDirectory() ~ "ExRumia.png";
  ObjPrim_SetTexture(objBoss, imgExRumia);
  ObjSprite2D_SetSourceRect(objBoss, 64, 1, 127, 64);
  ObjSprite2D_SetDestCenter(objBoss);
  ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 60, 60);

  TFinalize;
}

@MainLoop{
  ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
  ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);

  if (frame > 60) { // We have finished moving
    if (frame % 400 == 61) TFirst;
  }
  frame++;
  yield;
}


task TFirst {
  // sanity check
  if (ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 0) {
    return;
  }
   // first wave
  let bullets = [];
  loop(15) {
    let dx = rand_int(-150, 150), dy = rand_int(-150, 150);
    let x = GetCenterX() + dx, y = GetCenterY() + dy;
    if (!IsTooNearPlayer(x, y)) {
      let objBullet = CreateShotA1(x, y, 0, 0, DS_BALL_L_RED, 0);
      bullets = bullets ~ [objBullet];
    }
  }  
  wait(60);
  for each (let objBullet in bullets) {
    TSecond(objBullet);
  }
  for each (let objBullet in bullets) {
    Obj_Delete(objBullet);
  }
}



task TSecond(objBullet) {
  // second wave
  let bullets = [];
  let x = ObjMove_GetX(objBullet), y = ObjMove_GetY(objBullet);
  for (let angle = 0; angle <= 360; angle += 60) {
    let dx = 45 * cos(angle), dy = 45 * sin(angle);
    if (!IsTooNearPlayer(dx + x, dy + y)) {
      let childBullet = CreateShotA1(dx + x, dy + y, 0, 0, DS_BALL_M_RED, 0);
      bullets = bullets ~ [childBullet];
    }
  }
  wait(60);
  for each (let objBullet in bullets) {
    let angle = rand_int(0, 360);
    let x = ObjMove_GetX(objBullet), y = ObjMove_GetY(objBullet);
    loop(15) {
      CreateShotA1(x, y, 2, angle, DS_BUTTERFLY_GREEN, 0);
      angle = (angle + 24) % 360;
    }
    Obj_Delete(objBullet);
  }
}


function IsTooNearPlayer(x, y) {
  let px = GetPlayerX(), py = GetPlayerY();
  if (x > px - 10 && x < px + 10) return true;
  if (y > py - 10 && y < py + 10) return true;
  return false;
}


task TFinalize {
  while (ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) yield;
  Obj_Delete(objBoss);
  DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
  SetAutoDeleteObject(true);
  CloseScript(GetOwnScriptID());
  return;
}


function GetTouchedEdge(x, y) {
//  WriteLog("Checking touched edge: position is " ~ ToString(x) ~ ", " ~ ToString(y));
  if (x <= 1) return 3; // left
  else if (y <= 1) return 1; // top
  else if (y >= GetStgFrameHeight() - 1) return 0; // bottom, change this value to 2 if you want to bounce at bottom also
  else if (x >= GetStgFrameWidth() - 1) return 4; // right
  else return 0; // not touched
}


function GetCenterX(){
  return GetStgFrameWidth() / 2;
}


function GetCenterY(){
  return GetStgFrameHeight() / 2;
}
