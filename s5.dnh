#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Spellcard 5"]
#Text["Prosperity [The girl in the scientific era]"]
#include "script/default_system/Default_ShotConst.txt"
let objBoss;
let frame = 0;
let objScene = GetEnemyBossSceneObjectID();

@Event{
  alternative (GetEventType())
    case (EV_REQUEST_LIFE) {
      SetScriptResult(2000);
    }
    case (EV_REQUEST_TIMER) {
      SetScriptResult(60);
    }
    case (EV_REQUEST_SPELL_SCORE) {
      SetScriptResult(1000000);
    }

}


@Initialize{
  objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
  ObjEnemy_Regist(objBoss);
  ObjEnemyBossScene_StartSpell(objScene);
  ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 60, 60);
  TDrawLoop;
  TFinalize;
}

task TDrawLoop {
  let imgExRumia = GetCurrentScriptDirectory() ~ "ExRumia.png";
  ObjPrim_SetTexture(objBoss, imgExRumia);
  ObjSprite2D_SetSourceRect(objBoss, 64, 1, 127, 64);
  ObjSprite2D_SetDestCenter(objBoss);
}

@MainLoop{
  ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
  ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
  ObjEnemy_SetDamageRate(objBoss, 10, 10);
  if (frame > 60) { // We have finished moving
    if (frame % 300 == 61) {
      TCreateSquares;
    }
  }
  frame++;
  yield;
}

task TCreateSquare(X, Y, color, direction) {
  const dx = [-30, 0, 30], dy = [-30, 0, 30];
  for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 3; j++) {
      if (i == 1 && j == 1) continue;
      let dirofs = 0;
      if (ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 800) dirofs = rand(-20, 20);
      let shot = CreateShotA1(X + dx[i], Y + dy[j], 0, direction * 90 + dirofs, color, 0);
      let ofs = 0, mul = 1;
      if (ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 1200) ofs = rand(-0.2, 0.2);
      if (ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 600) {
        let hp = ObjEnemy_GetInfo(objBoss, INFO_LIFE);
        let alpha = ((600 - hp) / 500 + 0.8);
        ofs = rand(-1 * alpha, 1 * (600 - hp) / 500);
        mul = 2 * (600 - hp) / 500;
      }
      ObjMove_AddPatternA1(shot, 60, ofs + mul, NO_CHANGE);
    }
  }
}

task TCreateSquares {
  let X = GetCenterX(), Y = GetCenterY();
  let cnt = 0, ofs = rand(-50, 50);
  for (int i = 2; i <= GetStgFrameWidth() - 2; i += 90) {
    TCreateSquare(i, Y + ofs, DS_BALL_M_RED + cnt % 8, cnt % 4);
    cnt++;
    wait(10);
  }
  wait(120);
  ofs = rand(-50, 50);
  for (int i = 2; i <= GetStgFrameHeight() - 2; i += 90) {
    TCreateSquare(X + ofs, i, DS_BALL_M_RED + cnt % 8, cnt % 4);
    cnt++;
    wait(10);
  }
}


task TFinalize {
  while (ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) yield;
  Obj_Delete(objBoss);
  DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
  SetAutoDeleteObject(true);
  CloseScript(GetOwnScriptID());
  return;
}


function GetTouchedEdge(x, y) {
//  WriteLog("Checking touched edge: position is " ~ ToString(x) ~ ", " ~ ToString(y));
  if (x <= 1) return 3; // left
  else if (y <= 1) return 1; // top
  else if (y >= GetStgFrameHeight() - 1) return 0; // bottom, change this value to 2 if you want to bounce at bottom also
  else if (x >= GetStgFrameWidth() - 1) return 4; // right
  else return 0; // not touched
}


function GetCenterX(){
  return GetStgFrameWidth() / 2;
}


function GetCenterY(){
  return GetStgFrameHeight() / 2;
}
